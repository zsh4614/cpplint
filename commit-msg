#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

while read line
do	
	TYPE_MSG_PATTERN="^\*\*(Feat|Docs|Fix|Refactor|Perf|Test)\*\*$"
	SUBJECT_MSG_PATTERN="^- "
	BLANKLINE_MSG_PATTERN="^$"
	CEMMENT_MSG_PATTERN="^#"
	if [[ $line =~ $TYPE_MSG_PATTERN ]] || [[ $line =~ $BLANKLINE_MSG_PATTERN ]] || [[ $line =~ $SUBJECT_MSG_PATTERN ]] || [[ $line =~ $CEMMENT_MSG_PATTERN ]]; then
		continue
	else
		echo -e "\033[31mError: Commit Message! \033[0m"
		echo -e "\033[31mIrregular Commit Message: $line \033[0m"
		echo -e "\033[31mPlease obey robosense commit message rules: modify your CHANGELOG.MD, then copy reguler commit message! \033[0m"
		echo -e "\033[32mexample:
**Feat**

- feat_message1
- feat_message2

**Fix**

- fix_message1
- fix_message2\033[0m"
		exit 1
	fi
done < $1